# Redis Cluster Makefile
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Redis –∫–ª–∞—Å—Ç–µ—Ä–æ–º –≤ Docker –æ–∫—Ä—É–∂–µ–Ω–∏–∏

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE = docker-compose.yml
NETWORK_NAME = redis-cluster-net
DATA_DIR = ./data
REDIS_IMAGE = redis:7.2-alpine
CLUSTER_NODES = redis-node1:6379 redis-node2:6379 redis-node3:6379 redis-node4:6379 redis-node5:6379 redis-node6:6379 redis-node7:6379 redis-node8:6379 redis-node9:6379 redis-node10:6379

# –¶–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.PHONY: help up down restart status logs clean reset create-cluster check-cluster info reshard add-node remove-node backup restore test

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
help:
	@echo "Redis Cluster - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@echo "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏:"
	@echo "  make up              - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ Redis –Ω–æ–¥—ã"
	@echo "  make down            - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  make restart         - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  make status          - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo "  make logs            - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo ""
	@echo "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä–æ–º:"
	@echo "  make create-cluster  - –°–æ–∑–¥–∞—Ç—å Redis –∫–ª–∞—Å—Ç–µ—Ä"
	@echo "  make reset           - –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∫–ª–∞—Å—Ç–µ—Ä–∞ (—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º)"
	@echo "  make reset-force     - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
	@echo "  make check-cluster   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä–∞"
	@echo "  make info            - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Ç–µ—Ä–µ"
	@echo "  make reshard         - –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–ª–æ—Ç—ã –∫–ª–∞—Å—Ç–µ—Ä–∞"
	@echo ""
	@echo "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
	@echo "  make test            - –¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–ª–∞—Å—Ç–µ—Ä—É"
	@echo "  make cli             - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis CLI"
	@echo "  make monitor         - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–º–∞–Ω–¥ Redis"
	@echo ""
	@echo "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏:"
	@echo "  make backup          - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö"
	@echo "  make restore         - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –±—ç–∫–∞–ø–∞"
	@echo "  make clean           - –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ volumes"
	@echo ""
	@echo "–í–Ω–µ—à–Ω—è—è —Å–µ—Ç—å:"
	@echo "  make network-create  - –°–æ–∑–¥–∞—Ç—å –≤–Ω–µ—à–Ω—é—é Docker —Å–µ—Ç—å"
	@echo "  make network-remove  - –£–¥–∞–ª–∏—Ç—å –≤–Ω–µ—à–Ω—é—é —Å–µ—Ç—å (—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º)"
	@echo "  make network-info    - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏"
	@echo ""
	@echo "üí° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∫ —Å–µ—Ç–∏:"
	@echo "  docker run --network redis-cluster-net your-app"

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
up:
	@echo "–ó–∞–ø—É—Å–∫ Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@docker network inspect $(NETWORK_NAME) >/dev/null 2>&1 || make network-create
	@docker compose -f $(COMPOSE_FILE) up -d
	@echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!"
	@echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ 'make create-cluster' –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
down:
	@echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@docker compose -f $(COMPOSE_FILE) down
	@echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫
restart: down up

# –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
status:
	@echo "–°—Ç–∞—Ç—É—Å Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
	@docker compose -f $(COMPOSE_FILE) ps

# –õ–æ–≥–∏
logs:
	@echo "–õ–æ–≥–∏ Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
	@docker compose -f $(COMPOSE_FILE) logs -f --tail=100

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä–∞ (–∏–∑ —Å–∫—Ä–∏–ø—Ç–∞ create-cluster.sh)
create-cluster:
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ Redis –∫–ª–∞—Å—Ç–µ—Ä–∞..."
	@docker network inspect $(NETWORK_NAME) >/dev/null 2>&1 || make network-create
	@yes yes | docker run -i --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli --cluster create \
		$(CLUSTER_NODES) \
		--cluster-replicas 1
	@echo "–ö–ª–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω!"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞
check-cluster:
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞..."
	@docker run -it --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli --cluster check redis-node1:6379

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞—Å—Ç–µ—Ä–µ
info:
	@echo "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞—Å—Ç–µ—Ä–µ:"
	@docker run -it --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli --cluster info redis-node1:6379

# –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–æ–≤
reshard:
	@echo "‚ôª–ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–æ–≤ –∫–ª–∞—Å—Ç–µ—Ä–∞..."
	@docker run -it --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli --cluster reshard redis-node1:6379

# –°–±—Ä–æ—Å –∫–ª–∞—Å—Ç–µ—Ä–∞ (–∏–∑ —Å–∫—Ä–∏–ø—Ç–∞ reset-cluster.sh)
reset:
	@echo "WARNING: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ Redis –∫–ª–∞—Å—Ç–µ—Ä–∞!"
	@read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " confirm && \
	if [ "$$confirm" = "yes" ]; then \
		make reset-force; \
	else \
		echo "–û—Ç–º–µ–Ω–µ–Ω–æ"; \
		exit 1; \
	fi

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
reset-force:
	@echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@docker compose -f $(COMPOSE_FILE) down -v
	@echo "–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Redis..."
	@rm -rf $(DATA_DIR)/redis-node*
	@echo "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@make up
	@echo "–û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–¥ (5 —Å–µ–∫—É–Ω–¥)..."
	@sleep 5
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä–∞..."
	@make create-cluster
	@echo "–°–±—Ä–æ—Å –∫–ª–∞—Å—Ç–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!"

# –¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
test:
	@echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É..."
	@docker run -it --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli -c -h redis-node1 -p 6379 ping
	@echo "–¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!"

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ CLI
cli:
	@echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis CLI..."
	@docker run -it --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli -c -h redis-node1 -p 6379

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–º–∞–Ω–¥
monitor:
	@echo "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Redis –∫–æ–º–∞–Ω–¥..."
	@docker run -it --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli -h redis-node1 -p 6379 monitor

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –Ω–æ–¥—ã
add-node:
	@if [ -z "$(NODE)" ]; then \
		echo "–£–∫–∞–∂–∏—Ç–µ NODE=redis-nodeX:6379"; \
		exit 1; \
	fi
	@echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã $(NODE) –≤ –∫–ª–∞—Å—Ç–µ—Ä..."
	@docker run -it --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli --cluster add-node $(NODE) redis-node1:6379

# –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã
remove-node:
	@if [ -z "$(NODE_ID)" ]; then \
		echo "–£–∫–∞–∂–∏—Ç–µ NODE_ID=<node-id>"; \
		echo "–ü–æ–ª—É—á–∏—Ç–µ NODE_ID –∫–æ–º–∞–Ω–¥–æ–π: make info"; \
		exit 1; \
	fi
	@echo "–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã $(NODE_ID) –∏–∑ –∫–ª–∞—Å—Ç–µ—Ä–∞..."
	@docker run -it --rm --net $(NETWORK_NAME) $(REDIS_IMAGE) \
		redis-cli --cluster del-node redis-node1:6379 $(NODE_ID)

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
backup:
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ Redis –¥–∞–Ω–Ω—ã—Ö..."
	@mkdir -p ./backups
	@tar -czf ./backups/redis-backup-$(shell date +%Y%m%d-%H%M%S).tar.gz $(DATA_DIR)
	@echo "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ ./backups/"

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞
restore:
	@if [ -z "$(BACKUP)" ]; then \
		echo "–£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞: make restore BACKUP=./backups/redis-backup-XXXXXXXX.tar.gz"; \
		echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"; \
		ls -la ./backups/ 2>/dev/null || echo "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤"; \
		exit 1; \
	fi
	@echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞ $(BACKUP)..."
	@make down
	@rm -rf $(DATA_DIR)
	@tar -xzf $(BACKUP)
	@make up
	@echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# –°–æ–∑–¥–∞–Ω–∏–µ Docker —Å–µ—Ç–∏
network-create:
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–π Docker —Å–µ—Ç–∏ $(NETWORK_NAME)..."
	@docker network create --driver bridge $(NETWORK_NAME) 2>/dev/null || true
	@echo "–í–Ω–µ—à–Ω—è—è —Å–µ—Ç—å $(NETWORK_NAME) —Å–æ–∑–¥–∞–Ω–∞!"
	@echo "–¢–µ–ø–µ—Ä—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–≥—É—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ —ç—Ç–æ–π —Å–µ—Ç–∏"

# –£–¥–∞–ª–µ–Ω–∏–µ Docker —Å–µ—Ç–∏
network-remove:
	@echo "–í–ù–ò–ú–ê–ù–ò–ï: –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ç–∏ $(NETWORK_NAME) –æ—Ç–∫–ª—é—á–∏—Ç –í–°–ï –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!"
	@read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " confirm && \
	if [ "$$confirm" = "yes" ]; then \
		docker network rm $(NETWORK_NAME) 2>/dev/null || true; \
		echo "–°–µ—Ç—å —É–¥–∞–ª–µ–Ω–∞!"; \
	else \
		echo "–û—Ç–º–µ–Ω–µ–Ω–æ"; \
	fi

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏
network-info:
	@echo "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏ $(NETWORK_NAME):"
	@docker network inspect $(NETWORK_NAME) 2>/dev/null || echo "–°–µ—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
	@echo ""
	@echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
	@docker network inspect $(NETWORK_NAME) -f '{{range .Containers}}{{.Name}} ({{.IPv4Address}}){{"\n"}}{{end}}' 2>/dev/null || echo "–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"

# –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ volumes
clean:
	@echo "–û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ Docker volumes..."
	@make down
	@docker compose -f $(COMPOSE_FILE) down -v --remove-orphans
	@rm -rf $(DATA_DIR)
	@docker system prune -f --volumes
	@echo "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è –æ–±—Ä–∞–∑—ã)
clean-all: clean
	@echo "–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è Docker –æ–±—Ä–∞–∑—ã)..."
	@docker image rm $(REDIS_IMAGE) 2>/dev/null || true
	@docker system prune -af --volumes
	@make network-remove
	@echo "–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config:
	@echo "–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
	@echo "Docker Compose —Ñ–∞–π–ª: $(COMPOSE_FILE)"
	@echo "–°–µ—Ç—å: $(NETWORK_NAME)"
	@echo "–ü–∞–ø–∫–∞ –¥–∞–Ω–Ω—ã—Ö: $(DATA_DIR)"
	@echo "Redis –æ–±—Ä–∞–∑: $(REDIS_IMAGE)"
	@echo "–ù–æ–¥—ã –∫–ª–∞—Å—Ç–µ—Ä–∞: $(CLUSTER_NODES)"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
.DEFAULT_GOAL := help